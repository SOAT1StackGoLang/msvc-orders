basePath: /
externalDocs:
  description: OpenAPI
  url: https://swagger.io/resources/open-api/
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API ROUTER Helpers
  version: "1.0"
paths:
  /order:
    post:
      consumes:
      - application/json
      parameters:
      - description: Order request data
        in: body
        name: request
        required: true
        schema:
          example: "{\r\n \"user_id\": \"123e4567-e89b-12d3-a456-426614174000\",\r\n
            \"products_ids\": [\"98c1d1db-4f46-4ce7-989f-e1de2fba8068\", \"98c1d1db-4f46-4ce7-989f-e1de2fba8068\"]\r\n}"
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Create an order
      tags:
      - orders
  /order/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Delete an order
      tags:
      - orders
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Get an order
      tags:
      - orders
  /order/all:
    get:
      consumes:
      - application/json
      parameters:
      - description: Limit
        in: query
        name: limit
        required: true
        type: integer
      - description: Offset
        in: query
        name: offset
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: List all orders
      tags:
      - orders
  /order/checkout/{id}:
    get:
      consumes:
      - application/json
      parameters:
      - description: Order ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Checkout an order
      tags:
      - orders
  /order/items:
    put:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Update order items
      tags:
      - orders
  /product:
    post:
      consumes:
      - application/json
      description: Insert a product
      operationId: insert-product
      parameters:
      - description: Product data
        in: body
        name: request
        required: true
        schema:
          example: "{\r\n  \"name\": \"Coca-Cola 2L\",\r\n  \"description\": \"Refrigerante
            Coca-Cola 2L\",\r\n  \"category_id\": \"a557b0c0-3bcf-11ee-be56-0242ac120002\",\r\n
            \ \"price\": \"10.00\"\r\n}"
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Insert a product
      tags:
      - Products
  /product/{id}:
    get:
      description: Get a product by ID
      operationId: get-product
      parameters:
      - description: Product ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: ok
          schema:
            type: string
        "400":
          description: error
          schema:
            type: string
        "404":
          description: error
          schema:
            type: string
        "500":
          description: error
          schema:
            type: string
      summary: Get a product by ID
      tags:
      - Products
securityDefinitions:
  BasicAuth:
    type: basic
swagger: "2.0"
